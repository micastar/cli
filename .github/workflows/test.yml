name: Run tests

on:
  push:
    branches:
      - main
    tags:
      - v3.*
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  test:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        go: [stable, oldstable]

    name: ${{ matrix.os }} @ Go ${{ matrix.go }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ matrix.go }}

      - name: Set PATH
        run: echo "${GITHUB_WORKSPACE}/.local/bin" >>"${GITHUB_PATH}"
      - uses: actions/checkout@v4

      - if: matrix.go == 'stable' && matrix.os == 'ubuntu-latest'
        run: make ensure-goimports

      - if: matrix.go == 'stable' && matrix.os == 'ubuntu-latest'
        run: make lint

      - run: make vet
      - run: make test
      - run: make check-binary-size

      - if: matrix.go == 'stable' && matrix.os == 'ubuntu-latest'
        run: make generate

      - run: make diffcheck

      - if: matrix.go == 'stable' && matrix.os == 'ubuntu-latest'
        run: make v3diff

      - if: success() && matrix.go == 'stable' && matrix.os == 'ubuntu-latest'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          fail_ci_if_error: true
          verbose: true

  test-docs:
    name: test-docs
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 16

      - name: Set PATH
        run: echo "${GITHUB_WORKSPACE}/.local/bin" >>"${GITHUB_PATH}"

      - name: Clone repository
        uses: actions/checkout@v4

      - run: make ensure-gfmrun

      - run: make gfmrun
        env:
          FLAGS: --walk docs/v3/

      - run: make diffcheck

  publish:
    permissions:
      contents: write
    # TODO: switch once v3 is out of alpha {{
    # if: startswith(github.ref, 'refs/tags/')
    if: false
    # }}
    name: publish
    needs: [test-docs]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - run: make ensure-mkdocs
        env:
          FLAGS: --upgrade-pip

      - run: make set-mkdocs-remote
        env:
          MKDOCS_REMOTE_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: make deploy-mkdocs
